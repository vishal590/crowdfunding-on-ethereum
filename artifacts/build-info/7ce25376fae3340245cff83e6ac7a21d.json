{
	"id": "7ce25376fae3340245cff83e6ac7a21d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/MyCoin.sol": {
				"content": "//SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n// pragma use to specify which version is this\r\n\r\ncontract Mycoin{\r\n\r\n    // uint[7] public arr = [10,30,45,65,22,12,54];\r\n    // uint[] public arr1;\r\n\r\n    // function setter1(uint item) public{\r\n    //     return arr1.push(item);\r\n    // }\r\n\r\n\r\n    // function setter(uint index, uint value) public{\r\n    //     arr[index] = value;\r\n    // }\r\n\r\n    // function readd() public view returns(uint){\r\n    //     uint x = arr.length;\r\n    //     return x;\r\n    // }\r\n\r\n\r\n    // uint public age;\r\n    // constructor(){\r\n    //     age = 10;\r\n    // }\r\n\r\n    // // we passed argument in change function which takes state variable age and divide it.\r\n\r\n    // function change() public {\r\n    //     age /= 2;\r\n    // }\r\n\r\n    // don't need getter function when state variable declare with public keyword.\r\n    // constructor execute once when contract Mycoin created.\r\n    // used constructor to initialize state variable.\r\n}\r\n\r\n\r\n\r\n// contract Mycoin{\r\n\r\n//     uint value;\r\n//     // a is state variable and it stores on blockchain\r\n//     // state variable stores on blockchain \r\n\r\n// // this are fixed typed variable\r\n//     bool isReady;\r\n\r\n//     address recipient;\r\n//     bytes32 data;  // can hold binary data\r\n\r\n//     // variable size type\r\n//     string name;\r\n//     uint public val = 10;\r\n//     uint[] amounts;\r\n//     mapping(uint => string) users;\r\n\r\n\r\n\r\n//     // user define data\r\n//     struct User{\r\n//         uint id;\r\n//         string name;\r\n//         uint[] friends;\r\n//     }\r\n\r\n//     enum Color{\r\n//         RED,\r\n//         GREEN,\r\n//         BLUE\r\n//     }\r\n\r\n//     // To manipulate data we need function\r\n//     function getValue() pure public returns(uint){\r\n//         uint age = 10;\r\n\r\n//         return age;\r\n\r\n//         // local variables are declare inside function body and they store in stack \r\n//     }\r\n\r\n//     // function getter() public view returns(uint)  {\r\n//     //     return val;\r\n\r\n//     //     // view means only readable not writable so dont have to pay gas price\r\n//     // }\r\n\r\n//     function setter(uint nNum) public {\r\n//         val += nNum;\r\n//     }\r\n\r\n//     // by pass\r\n\r\n\r\n    \r\n//     // define contract by using contract keyword\r\n// }"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/MyCoin.sol": {
				"Mycoin": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/MyCoin.sol\":107:976  contract Mycoin{\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/MyCoin.sol\":107:976  contract Mycoin{\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122069bf8c600aa0bd05a5dc2fb50add415658658cd15ee16ad83067d61b13100f9364736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea264697066735822122069bf8c600aa0bd05a5dc2fb50add415658658cd15ee16ad83067d61b13100f9364736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0xBF8C600AA0BD05A5DC2F 0xB5 EXP 0xDD COINBASE JUMP PC PUSH6 0x8CD15EE16AD8 ADDRESS PUSH8 0xD61B13100F936473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "107:869:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea264697066735822122069bf8c600aa0bd05a5dc2fb50add415658658cd15ee16ad83067d61b13100f9364736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0xBF8C600AA0BD05A5DC2F 0xB5 EXP 0xDD COINBASE JUMP PC PUSH6 0x8CD15EE16AD8 ADDRESS PUSH8 0xD61B13100F936473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "107:869:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 107,
									"end": 976,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 107,
									"end": 976,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 107,
									"end": 976,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 107,
									"end": 976,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 107,
									"end": 976,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 107,
									"end": 976,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 107,
									"end": 976,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 107,
									"end": 976,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 107,
									"end": 976,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 107,
									"end": 976,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 107,
									"end": 976,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 107,
									"end": 976,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 107,
									"end": 976,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 107,
									"end": 976,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 107,
									"end": 976,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 107,
									"end": 976,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 107,
									"end": 976,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 107,
									"end": 976,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 107,
									"end": 976,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 107,
									"end": 976,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 107,
									"end": 976,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122069bf8c600aa0bd05a5dc2fb50add415658658cd15ee16ad83067d61b13100f9364736f6c63430008070033",
									".code": [
										{
											"begin": 107,
											"end": 976,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 107,
											"end": 976,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 107,
											"end": 976,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 107,
											"end": 976,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 107,
											"end": 976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 976,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyCoin.sol\":\"Mycoin\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MyCoin.sol\":{\"keccak256\":\"0xcdf4cef530473560229a12a3060b982954bc4e676cc8022654bb1e25093604fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a3698c47fecbd016495b4edc7e199689160bdfb40e7b23f4673a87bcc5c40665\",\"dweb:/ipfs/Qmc446UPAwvVVVvpoCwThCYKNqPXviXuoa6SL6PaomZGoS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/MyCoin.sol": {
				"ast": {
					"absolutePath": "contracts/MyCoin.sol",
					"exportedSymbols": {
						"Mycoin": [
							2
						]
					},
					"id": 3,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "Mycoin",
							"nameLocation": "116:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "107:869:0",
							"usedErrors": []
						}
					],
					"src": "32:2224:0"
				},
				"id": 0
			}
		}
	}
}